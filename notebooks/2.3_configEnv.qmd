---
title: "**Configuring a run for your environment**"
output:
  html_document:
    toc: false
    toc_float: false
from: markdown+emoji
---

::: callout-tip
### Objectives{.unlisted}

- Understand formatting requirements of a config file 
- Write a custom config file for your local environment that overwrites default workflow settings 
- Run a workflow using the custom config file and appropriate Nextflow flag 
- Use an alternative container source for a workflow process  
:::

Nextflow's portability is enabled by its ability to separate workflow implementation from the configuration settings required to execute it. In the previous lesson we used a parameter file to define some workflow implementation settings, in this lesson we will be using configuration files to define the specifications required for task execution on our compute environment. 

While nf-core workflows are designed to be portable and work out of the box, sometimes it will be necessary for you to customise the workflow's configuration so that it can run on your environment. Bioinformatics workflows, like those provided by nf-core, comprise multiple steps that have varying computational resource needs. These workflows can also be long running, especially when you're working at scale with multiple samples and organisms with complex and large genomes. To ensure you can successfully run your workflow, it is important to understand the computational resources it will be consuming and configure your workflows computational resource useage accordingly. 

::: {.callout-caution collapse="true"}
### **What are compute resources?**

Compute resources refer to the Central Processing Unit (CPU), Random Access Memory (RAM), and disk requirements of the workflow, which can vary depending on the size and complexity of our input data, and the specific work being performed. These are critical resources that determine the efficiency and scalability of our workflows. Consider the following analogy for how CPUs, RAM, and disk space work together to process data. 

![](../figs/2.3_CPUnigella.png)

Imagine Nigella Lawson preparing a Christmas dinner in her kitchen. Like Nigella in the kitchen, the **CPU is the main processing unit** in a computer that performs the various tasks in your compute environment. 

Like Nigella's countertop that acts as her working space in the kitchen, **RAM is the temporary working space** used to store and manipulate data during computation. The amount of RAM required by a task depends on the size of the input data, as well as the complexity of the task being performed. Insufficient RAM can cause the workflow to fail or significantly slow down due to excessive disk I/O. 

Like Nigella's fridge and pantry that hold all her ingredients, **disk space is required to store all the input/output data and intermediate files** generated by a task. In bioinformatics, well organised and large amounts of disk space is required because biological data sets can be large, complex, and varied in format. 
:::

### **When to use a config file**

While nf-core workflows 


### **How to use a config file**

### **Write a custom config**

::: {.callout-note}
### **Why should I be concerned with computational efficiency?** :earth_asia: 

Bioinformatics relies on large-scale computational infrastructures and has a signficant carbon footprint due to the energy required to run computational workflows. We can optimise our worklfows to not only reduce their runtime, but also adopt more sustainable computing practices. 

By using cloud computing services and high-performance computing clusters (like those provided by [Pawsey](https://pawsey.org.au/our-green-credentials/)), we can take advantage of energy-efficient infrastructure. We can also use tools like Nextflow that provide features like intelligent task scheduling, automatic job parallelisation, and task-level resource allocation. If you'd like to learn more about the carbon footprint of some bioinformatics workflows and tools, this [paper](https://academic.oup.com/mbe/article/39/3/msac034/6526403) makes for an interesting read! 
:::