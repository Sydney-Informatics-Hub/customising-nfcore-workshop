---
title: "**2.0. Introduction to session 2**"
output:
  html_document:
    toc: false
    toc_float: false
from: markdown+emoji
---

This session builds on fundamental concepts learned in [Session 1]() and provide you with hands-on experience in nf-core workflow customisation. Throughout the session we will be working with a case study to apply an nf-core workflow. Each lesson will build on the previous one, so you can gain a deeper understanding of the customisation techniques and the impact they have on the workflow and your results. 

We will explore the source code of the nf-core/rnaseq workflow and apply customisations using a parameter file and custom configuration files. You will be writing these files using **Nextflow** and **YAML**. You will also be running Nextflow commands and writing some custom **Bash** code to efficiently extract information from the source code :nerd_face:. 

::: callout-note
### Applying what you learn here to other nf-core workflows
While all activities in this session will be performed using the nf-core/rnaseq workflow, all customisation scenarios we explore are applicable to other nf-core workflows and do not require an understanding of RNAseq data processing. 
:::

### **2.0.1. How to approach open source software communities**

As with all open source bioinformatics resources, nf-core workflows may not suit all applications. It is always important that you **understand the needs of your dataset and research questions before deciding on a workflow**. nf-core is a community effort powered by life scientists and software developers, who volunteer their time to build, maintain, and support workflows. All nf-core workflows are provided with 'sensible' default settings that have broad applicability. What is 'sensible' varies dramatically between different experiments, users, computing environments, and datasets, so these settings might not suit your needs. 

We recommend approaching the application and customisation of nf-core workflows to your research with the following framework:



**DIAGRAM OF NF-CORE COMMUNITY FEATURE - IMPLICATION FOR WORKFLOWS - Q TO ASK - OUR RECOMMENDATIONS**

### **2.0.2. Log in to your instance**

#### **Option 1: In Visual Studio Code** 

Follow the [VSCode set up instructions](../setup.qmd#login-via-visual-studio-code) or use the quick start instructions below to connect to your instance using the command palatte:

  * `Ctrl`+`Shift`+`P` to open command palette 
  * Select `Remote-SSH: Connect to Host` and select name of your host
  * Select `Linux` from dropdown menu and then `continue` 

Having successfully logged in, you should see a small green box in the bottom left corner of your screen:

![](https://user-images.githubusercontent.com/73086054/228143085-20a5bdfc-f4e7-4472-b43f-2c975ae5eb4c.png)

#### **Option 2: In a terminal** 
Follow the [terminal set up instructions](../setup.qmd#login-via-terminal) or use the quick start instructions below to connect to your instance on the command-line: 

  * Run: `ssh training@###.###.###.###`
  * Enter the password provided at the beginning of the workshop. Ask one of the demonstrators if youâ€™ve forgotten it.

Having successfully logged in, your terminal should then display something like that shown in the figure below:

![](https://user-images.githubusercontent.com/73086054/228141686-a63a84c1-b714-4797-af8e-2b511421a7d8.png)

::: {.callout-note}
### **Key points**
- nf-core workflows are provided with sensible defaults. These may not always suit your needs. 
- To decide whether an nf-core workflow is the right choice for your experiment you need to understand the needs of your dataset and research questions.
- Use the workflow documentation to understand the requirements for running a workflow. 
:::
